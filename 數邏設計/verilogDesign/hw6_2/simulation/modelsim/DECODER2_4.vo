// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "03/31/2025 13:33:42"

// 
// Device: Altera EP4CGX15BF14A7 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module DECODER2_4 (
	A,
	B,
	Y);
input 	A;
input 	B;
output 	[3:0] Y;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Y[0]~output_o ;
wire \Y[1]~output_o ;
wire \Y[2]~output_o ;
wire \Y[3]~output_o ;
wire \A~input_o ;
wire \B~input_o ;
wire \Decoder0~0_combout ;
wire \Decoder0~1_combout ;
wire \Decoder0~2_combout ;
wire \Decoder0~3_combout ;


cycloneiv_io_obuf \Y[0]~output (
	.i(\Decoder0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Y[0]~output .bus_hold = "false";
defparam \Y[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \Y[1]~output (
	.i(!\Decoder0~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Y[1]~output .bus_hold = "false";
defparam \Y[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \Y[2]~output (
	.i(!\Decoder0~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Y[2]~output .bus_hold = "false";
defparam \Y[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \Y[3]~output (
	.i(!\Decoder0~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \Y[3]~output .bus_hold = "false";
defparam \Y[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \Decoder0~0 (
// Equation(s):
// \Decoder0~0_combout  = (\A~input_o ) # (\B~input_o )

	.dataa(\A~input_o ),
	.datab(\B~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\Decoder0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~0 .lut_mask = 16'hEEEE;
defparam \Decoder0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \Decoder0~1 (
// Equation(s):
// \Decoder0~1_combout  = (\B~input_o  & !\A~input_o )

	.dataa(\B~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\A~input_o ),
	.cin(gnd),
	.combout(\Decoder0~1_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~1 .lut_mask = 16'h00AA;
defparam \Decoder0~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \Decoder0~2 (
// Equation(s):
// \Decoder0~2_combout  = (\A~input_o  & \B~input_o )

	.dataa(\A~input_o ),
	.datab(\B~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\Decoder0~2_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~2 .lut_mask = 16'h8888;
defparam \Decoder0~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \Decoder0~3 (
// Equation(s):
// \Decoder0~3_combout  = (\A~input_o  & !\B~input_o )

	.dataa(\A~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\B~input_o ),
	.cin(gnd),
	.combout(\Decoder0~3_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~3 .lut_mask = 16'h00AA;
defparam \Decoder0~3 .sum_lutc_input = "datac";
// synopsys translate_on

assign Y[0] = \Y[0]~output_o ;

assign Y[1] = \Y[1]~output_o ;

assign Y[2] = \Y[2]~output_o ;

assign Y[3] = \Y[3]~output_o ;

endmodule
