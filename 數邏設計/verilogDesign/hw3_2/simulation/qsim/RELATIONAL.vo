// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "03/10/2025 13:39:56"

// 
// Device: Altera EP4CGX15BF14A7 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module RELATIONAL (
	A,
	B,
	\LARGE ,
	\SMALL ,
	LARGE_EQV,
	SMALL_EQV);
input 	[3:0] A;
input 	[3:0] B;
output 	\LARGE ;
output 	\SMALL ;
output 	LARGE_EQV;
output 	SMALL_EQV;

// Design Ports Information
// LARGE	=>  Location: PIN_A6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// SMALL	=>  Location: PIN_C8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// LARGE_EQV	=>  Location: PIN_D12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// SMALL_EQV	=>  Location: PIN_L4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[3]	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[2]	=>  Location: PIN_M4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B[2]	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B[3]	=>  Location: PIN_L5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[1]	=>  Location: PIN_N4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[0]	=>  Location: PIN_L9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B[0]	=>  Location: PIN_L7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B[1]	=>  Location: PIN_C12,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \A[3]~input_o ;
wire \A[1]~input_o ;
wire \LARGE~output_o ;
wire \SMALL~output_o ;
wire \LARGE_EQV~output_o ;
wire \SMALL_EQV~output_o ;
wire \A[2]~input_o ;
wire \B[2]~input_o ;
wire \B[3]~input_o ;
wire \LessThan0~2_combout ;
wire \B[0]~input_o ;
wire \A[0]~input_o ;
wire \B[1]~input_o ;
wire \LessThan0~1_combout ;
wire \LessThan0~0_combout ;
wire \LessThan0~3_combout ;
wire \LessThan1~0_combout ;
wire \LessThan1~1_combout ;
wire \LessThan1~2_combout ;


// Location: IOIBUF_X12_Y0_N8
cycloneiv_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X10_Y0_N8
cycloneiv_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOOBUF_X10_Y31_N2
cycloneiv_io_obuf \LARGE~output (
	.i(\LessThan0~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LARGE~output_o ),
	.obar());
// synopsys translate_off
defparam \LARGE~output .bus_hold = "false";
defparam \LARGE~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X22_Y31_N9
cycloneiv_io_obuf \SMALL~output (
	.i(\LessThan1~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\SMALL~output_o ),
	.obar());
// synopsys translate_off
defparam \SMALL~output .bus_hold = "false";
defparam \SMALL~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X33_Y28_N9
cycloneiv_io_obuf \LARGE_EQV~output (
	.i(!\LessThan1~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LARGE_EQV~output_o ),
	.obar());
// synopsys translate_off
defparam \LARGE_EQV~output .bus_hold = "false";
defparam \LARGE_EQV~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X8_Y0_N9
cycloneiv_io_obuf \SMALL_EQV~output (
	.i(!\LessThan0~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\SMALL_EQV~output_o ),
	.obar());
// synopsys translate_off
defparam \SMALL_EQV~output .bus_hold = "false";
defparam \SMALL_EQV~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X8_Y0_N1
cycloneiv_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X12_Y0_N1
cycloneiv_io_ibuf \B[2]~input (
	.i(B[2]),
	.ibar(gnd),
	.o(\B[2]~input_o ));
// synopsys translate_off
defparam \B[2]~input .bus_hold = "false";
defparam \B[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X14_Y0_N8
cycloneiv_io_ibuf \B[3]~input (
	.i(B[3]),
	.ibar(gnd),
	.o(\B[3]~input_o ));
// synopsys translate_off
defparam \B[3]~input .bus_hold = "false";
defparam \B[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X12_Y1_N12
cycloneiv_lcell_comb \LessThan0~2 (
// Equation(s):
// \LessThan0~2_combout  = (\A[3]~input_o  & (\B[3]~input_o  & (\A[2]~input_o  $ (!\B[2]~input_o )))) # (!\A[3]~input_o  & (!\B[3]~input_o  & (\A[2]~input_o  $ (!\B[2]~input_o ))))

	.dataa(\A[3]~input_o ),
	.datab(\A[2]~input_o ),
	.datac(\B[2]~input_o ),
	.datad(\B[3]~input_o ),
	.cin(gnd),
	.combout(\LessThan0~2_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~2 .lut_mask = 16'h8241;
defparam \LessThan0~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X14_Y0_N1
cycloneiv_io_ibuf \B[0]~input (
	.i(B[0]),
	.ibar(gnd),
	.o(\B[0]~input_o ));
// synopsys translate_off
defparam \B[0]~input .bus_hold = "false";
defparam \B[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X24_Y0_N8
cycloneiv_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X31_Y31_N8
cycloneiv_io_ibuf \B[1]~input (
	.i(B[1]),
	.ibar(gnd),
	.o(\B[1]~input_o ));
// synopsys translate_off
defparam \B[1]~input .bus_hold = "false";
defparam \B[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X12_Y1_N2
cycloneiv_lcell_comb \LessThan0~1 (
// Equation(s):
// \LessThan0~1_combout  = (\A[1]~input_o  & (((!\B[0]~input_o  & \A[0]~input_o )) # (!\B[1]~input_o ))) # (!\A[1]~input_o  & (!\B[0]~input_o  & (\A[0]~input_o  & !\B[1]~input_o )))

	.dataa(\A[1]~input_o ),
	.datab(\B[0]~input_o ),
	.datac(\A[0]~input_o ),
	.datad(\B[1]~input_o ),
	.cin(gnd),
	.combout(\LessThan0~1_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~1 .lut_mask = 16'h20BA;
defparam \LessThan0~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X12_Y1_N0
cycloneiv_lcell_comb \LessThan0~0 (
// Equation(s):
// \LessThan0~0_combout  = (\A[3]~input_o  & (((\A[2]~input_o  & !\B[2]~input_o )) # (!\B[3]~input_o ))) # (!\A[3]~input_o  & (\A[2]~input_o  & (!\B[2]~input_o  & !\B[3]~input_o )))

	.dataa(\A[3]~input_o ),
	.datab(\A[2]~input_o ),
	.datac(\B[2]~input_o ),
	.datad(\B[3]~input_o ),
	.cin(gnd),
	.combout(\LessThan0~0_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~0 .lut_mask = 16'h08AE;
defparam \LessThan0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X12_Y1_N22
cycloneiv_lcell_comb \LessThan0~3 (
// Equation(s):
// \LessThan0~3_combout  = (\LessThan0~0_combout ) # ((\LessThan0~2_combout  & \LessThan0~1_combout ))

	.dataa(\LessThan0~2_combout ),
	.datab(\LessThan0~1_combout ),
	.datac(gnd),
	.datad(\LessThan0~0_combout ),
	.cin(gnd),
	.combout(\LessThan0~3_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~3 .lut_mask = 16'hFF88;
defparam \LessThan0~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X12_Y1_N24
cycloneiv_lcell_comb \LessThan1~0 (
// Equation(s):
// \LessThan1~0_combout  = (\A[3]~input_o  & (!\A[2]~input_o  & (\B[2]~input_o  & \B[3]~input_o ))) # (!\A[3]~input_o  & ((\B[3]~input_o ) # ((!\A[2]~input_o  & \B[2]~input_o ))))

	.dataa(\A[3]~input_o ),
	.datab(\A[2]~input_o ),
	.datac(\B[2]~input_o ),
	.datad(\B[3]~input_o ),
	.cin(gnd),
	.combout(\LessThan1~0_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan1~0 .lut_mask = 16'h7510;
defparam \LessThan1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X12_Y1_N26
cycloneiv_lcell_comb \LessThan1~1 (
// Equation(s):
// \LessThan1~1_combout  = (\A[1]~input_o  & (\B[0]~input_o  & (!\A[0]~input_o  & \B[1]~input_o ))) # (!\A[1]~input_o  & ((\B[1]~input_o ) # ((\B[0]~input_o  & !\A[0]~input_o ))))

	.dataa(\A[1]~input_o ),
	.datab(\B[0]~input_o ),
	.datac(\A[0]~input_o ),
	.datad(\B[1]~input_o ),
	.cin(gnd),
	.combout(\LessThan1~1_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan1~1 .lut_mask = 16'h5D04;
defparam \LessThan1~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X12_Y1_N20
cycloneiv_lcell_comb \LessThan1~2 (
// Equation(s):
// \LessThan1~2_combout  = (\LessThan1~0_combout ) # ((\LessThan0~2_combout  & \LessThan1~1_combout ))

	.dataa(\LessThan0~2_combout ),
	.datab(\LessThan1~0_combout ),
	.datac(\LessThan1~1_combout ),
	.datad(gnd),
	.cin(gnd),
	.combout(\LessThan1~2_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan1~2 .lut_mask = 16'hECEC;
defparam \LessThan1~2 .sum_lutc_input = "datac";
// synopsys translate_on

assign \LARGE  = \LARGE~output_o ;

assign \SMALL  = \SMALL~output_o ;

assign LARGE_EQV = \LARGE_EQV~output_o ;

assign SMALL_EQV = \SMALL_EQV~output_o ;

endmodule
